<?php
/**
 * @file
 * Contains hook implementations and helper functions for GSB 12Twenty
 */

  /**
   * Implements hook_menu().
   */
  function gsb_twelve_twenty_menu() {
    $items = array();
    $items['12Twenty-student'] = array(
      'title' => 'GSB 12Twenty Student Auth',
      'description' => 'GSB 12Twenty Student',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('gsb_twelve_twenty_check_simplesaml_auth'),
      'access callback' => TRUE,
      'type' => MENU_CALLBACK,
    );
    $items['12Twenty-alumni'] = array(
      'title' => 'GSB 12Twenty Alumni Auth',
      'description' => 'GSB 12Twenty Alumni Auth',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('gsb_twelve_twenty_check_alumni_auth'),
      'access callback' => TRUE,
      'type' => MENU_CALLBACK,
    );
    return $items;
  }

  /**
  * Student authentication function 
  */
  function gsb_twelve_twenty_check_simplesaml_auth() {
    $simplesaml_auth_object = simplesaml_auth_login_check(FALSE);
    $attributes = $simplesaml_auth_object->getAttributes();
    if (empty($attributes['urn:oid:1.3.6.1.4.1.5923.1.1.1.7'])) {
      return false;
    } else {
      $workgroups = $attributes['urn:oid:1.3.6.1.4.1.5923.1.1.1.7'];
      $approved_workgroups = variable_get('gsb_cmis_approved_workgroups', array());
      $has_approved_workgroup = false;
      foreach ($approved_workgroups as $awg) {
        if (in_array($awg, $workgroups)) {
          $has_approved_workgroup = true;
          break;
        }
      }
      if (in_array('gsb-apps:nongsb_deny', $workgroups)) {
        return false;
      }
      if (!$has_approved_workgroup) {
        return false;
      }
    }
    if (simplesaml_auth_user_authenticated()) {
       _gsb_twelve_twenty_token_gen('simplesaml');
    }
    
  }

  /**
  * Alumni authentication function 
  */
  function gsb_twelve_twenty_check_alumni_auth() {
    global $base_url;
    $next_url = $base_url. '/' . current_path();
    $next_url = str_replace('http://', 'https://', $next_url);
    alumni_cas_auth_login($next_url);
    if (user_is_logged_in() && $_REQUEST['xjst'] != "") {
        $url = "https://stanfordgsbapps.secure.force.com/core/services/apexrest/decodepgalumid?suid=".$_REQUEST['xjst'];
        $return = drupal_http_request($url);
        if(isset($return->data)) {
          $user_data = json_decode($return->data);
          _gsb_twelve_twenty_token_gen('cas', $user_data);
        }
    }

  }

  /**
   * 12twenty Token generating url setting
   */
  function _gsb_twelve_twenty_token_gen($type,$user_data=array()) {
    global $user;
    $token_key       = "9f8a8015d94f4c0bbb29509";
    //$token_auth_url  = "https://business-gsb-stanford.sandbox-12twenty.com/SingleSignOn/generateAuthenticationToken?key=".$token_key;
    $token_auth_url  = "https://business-gsb-stanford.sandbox-12twenty.com/SingleSignOn/generateAuthenticationToken?key=".$token_key;
    if($type == 'simplesaml' && $user->name != "") {
       //For student passing name  for authentication
       $url = $token_auth_url."&id=".$user->name;
       _gsb_twelve_twenty_token_auth($url);
    } 
    else if($type == 'cas' && $user_data->username != "") {
       //$user_data->username = "temp17";
       //$sunet_id = explode("@", $user_data->email);
       //$url = $token_auth_url."&id=".$sunet_id[0];
       $url = $token_auth_url."&id=".$user_data->username;
       _gsb_twelve_twenty_token_auth($url);
    }
  }

 /**
 * 12twenty Token generating and authenticating with 12twenty website
 */
  function _gsb_twelve_twenty_token_auth($token_auth_url=null) {
     //$token_red_url   = "https://business-gsb-stanford.sandbox-12twenty.com/SingleSignOn/authenticate?ssotoken=";
     $token_red_url   = "https://business-gsb-stanford.sandbox-12twenty.com/SingleSignOn/authenticate?ssotoken=";
     $session = curl_init();
     curl_setopt($session, CURLOPT_URL, $token_auth_url);
     curl_setopt($session, CURLOPT_SSL_VERIFYPEER, FALSE);
     curl_setopt($session, CURLOPT_RETURNTRANSFER, 1);
     curl_setopt($session, CURLOPT_HEADER, 0);
     curl_setopt($session, CURLOPT_HTTPHEADER, array("Content-Type" => ""));
     curl_setopt($session, CURLOPT_SSL_VERIFYHOST, 0);
     curl_setopt($session, CURLOPT_SSL_VERIFYPEER, 0);
     curl_setopt($session, CURLOPT_CUSTOMREQUEST, "GET");
     $body = curl_exec($session);
     curl_close($session);
     if($body != "") {
        drupal_goto( $token_red_url.$body, array('external' => TRUE));
     }
  }