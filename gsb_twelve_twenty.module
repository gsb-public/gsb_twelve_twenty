<?php
/**
 * @file
 * Contains hook implementations and helper functions for GSB 12Twenty
 */

  /**
   * Implements hook_menu().
   */
  function gsb_twelve_twenty_menu() {
     global $user;
     $items = array();
      $items['12Twenty-student'] = array(
      'title' => 'GSB 12Twenty Student Auth',
      'description' => 'GSB 12Twenty Student',
      'page callback' => 'gsb_twelve_twenty_check_simplesaml_auth',
      'access callback' => TRUE,
     );
     $items['12Twenty-alumni'] = array(
      'title' => 'GSB 12Twenty Alumni Auth',
      'description' => 'GSB 12Twenty Alumni Auth',
      'page callback' => 'gsb_twelve_twenty_check_alumni_auth',
      'access callback' => TRUE,
     );
    $items['admin/config/people/twelve-twenty'] = array(
    'title' => 'Twelve Twenty Auth settings',
    'description' => 'Configure Twelve Twenty Auth settings',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('gsb_twelve_twenty_admin_settings'),
    'access arguments' => array('access administration pages'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'gsb_twelve_twenty.admin.inc',
    );
    return $items;
  }

  /**
  * Student authentication function 
  */
  function gsb_twelve_twenty_check_simplesaml_auth() {
    watchdog('at gsb_twelve_twenty_check_simplesaml_auth 0', '');
    $simplesaml_auth_object = simplesaml_auth_login_check(FALSE);
    $attributes = $simplesaml_auth_object->getAttributes();
    if (empty($attributes['urn:oid:1.3.6.1.4.1.5923.1.1.1.7'])) {
      watchdog('at gsb_twelve_twenty_check_simplesaml_auth 1', '');
      return false;
    } else {
      watchdog('at gsb_twelve_twenty_check_simplesaml_auth 1', '');
      $workgroups = $attributes['urn:oid:1.3.6.1.4.1.5923.1.1.1.7'];
      $approved_workgroups = variable_get('gsb_cmis_approved_workgroups', array());
      $has_approved_workgroup = false;
      foreach ($approved_workgroups as $awg) {
        if (in_array($awg, $workgroups)) {
          $has_approved_workgroup = true;
          watchdog('at gsb_twelve_twenty_check_simplesaml_auth 2', '');
          break;
        }
      }
      if (in_array('gsb-apps:nongsb_deny', $workgroups)) {
        watchdog('at gsb_twelve_twenty_check_simplesaml_auth 3', '');
        return false;
      }
      if (!$has_approved_workgroup) {
        watchdog('at gsb_twelve_twenty_check_simplesaml_auth 4', '');
        return false;
      }
    }
    if (simplesaml_auth_user_authenticated()) {
       watchdog('at gsb_twelve_twenty_check_simplesaml_auth 5', ''); 
        //simplesaml_auth_manage_user_account($simplesaml_auth_object, TRUE);
       if(!empty($attributes['urn:mace:dir:attribute-def:suUnivID'] ) ) {
        watchdog('at gsb_twelve_twenty_check_simplesaml_auth 6', ''); 
        $univid = "00".$attributes['urn:mace:dir:attribute-def:suUnivID'][0];
       } 
       else {
        watchdog('at gsb_twelve_twenty_check_simplesaml_auth 7', ''); 
        $univid = "";
       }
       watchdog('at gsb_twelve_twenty_check_simplesaml_auth 8', $univid); 
        _gsb_twelve_twenty_token_gen('simplesaml',$univid);
    }
    
  }

  /**
  * Alumni authentication function 
  */
  function gsb_twelve_twenty_check_alumni_auth() {
    global $user;
    global $base_url;
    $next_url = $base_url. '/' . current_path();
    $next_url = str_replace('http://', 'https://', $next_url);
    alumni_cas_auth_login($next_url);
    $xjst = print_r($_REQUEST, true);
    watchdog('CAS user xjst value', $xjst);
    if (user_is_logged_in() && isset($_REQUEST['xjst']) && $_REQUEST['xjst'] != "") {
        $url = "https://stanfordgsbapps.secure.force.com/core/services/apexrest/decodepgalumid?suid=".$_REQUEST['xjst'];
        $return = drupal_http_request($url);
        if (isset($return->data)) {
           $user_data = json_decode($return->data);
           $loginname = "000".$user_data->suid;
           //for making the login id to 10 digits
           $loginname = substr($loginname, -10);
           $user->init = $loginname;
           $user->mail = $user_data->email;
           watchdog('CAS user Sunet ID condition 1', $loginname);
           _gsb_twelve_twenty_token_gen('cas', $user->init);
        }
    } elseif (user_is_logged_in()) {
      if (isset($user->init) && $user->init != "") {
         $user->init = "000".$user->init;
         $user->init = substr($user->init, -10);
         watchdog('CAS user Sunet ID condition 2', $user->init);
         _gsb_twelve_twenty_token_gen('cas', $user->init);
      }
    }
  }

  /**
   * 12twenty Token generating url setting with parameter
   */
  function _gsb_twelve_twenty_token_gen($type, $loginname=null) {
    global $user;
    watchdog('at _gsb_twelve_twenty_token_gen 0', '');
    $token_key = variable_get('twelve_twenty_token');
    $token_auth_url  = trim(variable_get('twelve_twenty_token_auth_url'))."?key=".$token_key;
    if ($type == 'simplesaml') {
       //For student passing name  for authentication
      watchdog('Simplesaml user Sunet ID', $loginname);
      if($loginname != "") {
        watchdog('at _gsb_twelve_twenty_token_gen 1', '');
        $url = $token_auth_url."&id=".$loginname;
      }
      else {
        watchdog('at _gsb_twelve_twenty_token_gen 2', '');
        $url = $token_auth_url."&id=".$user->init;
      }
      watchdog('Simplesaml login id with 12twenty token auth url', $url);
      _gsb_twelve_twenty_token_auth($url);
    } elseif ($type == 'cas' && $loginname != "") {
        //For alumni passing loginname  for authentication
        $url = $token_auth_url."&id=".$loginname;
        watchdog('CAS login id with 12twenty token auth url', $url);
       _gsb_twelve_twenty_token_auth($url);
    }
    watchdog('at _gsb_twelve_twenty_token_gen 3', '');
  }

 /**
 * 12twenty Token generating and authenticating with 12twenty website
 */
  function _gsb_twelve_twenty_token_auth($token_auth_url=null) {
     watchdog('at _gsb_twelve_twenty_token_auth 0', '');
     //$token_red_url   = "https://business-gsb-stanford.sandbox-12twenty.com/SingleSignOn/authenticate?ssotoken=";
     $token_red_url = trim(variable_get('twelve_twenty_token_ret_url'))."?ssotoken=";
     watchdog('12twenty token auth url', $token_auth_url);
     $session = curl_init();
     curl_setopt($session, CURLOPT_URL, $token_auth_url);
     curl_setopt($session, CURLOPT_SSL_VERIFYPEER, FALSE);
     curl_setopt($session, CURLOPT_RETURNTRANSFER, 1);
     curl_setopt($session, CURLOPT_HEADER, 0);
     curl_setopt($session, CURLOPT_HTTPHEADER, array("Content-Type" => ""));
     curl_setopt($session, CURLOPT_SSL_VERIFYHOST, 0);
     curl_setopt($session, CURLOPT_SSL_VERIFYPEER, 0);
     curl_setopt($session, CURLOPT_CUSTOMREQUEST, "GET");
     $body = curl_exec($session);
     curl_close($session);
     if ($body != "") {
        watchdog('12twenty token redirection url', $token_red_url.$body);
        drupal_goto( $token_red_url.$body, array('external' => TRUE));
     }
     watchdog('at _gsb_twelve_twenty_token_auth 1', '');
  }

